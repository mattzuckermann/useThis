type Choice {
  answer: String!
  isCorrect: Boolean!
}

enum QuestionType {
  MULTICHOICE
  MULTIANSWER
  TRUEFALSE
  FILLBLANK
}

type Problem {
  _id: ID!
  question: String!
  questionType: QuestionType!
  choices: [Choice]!
  correctAnswers: Int!
  image: String!
  quizCategory: String!
}

input InputChoice {
  answer: String!
  isCorrect: Boolean!
}

input ProblemInput {
  _id: ID
  question: String!
  questionType: QuestionType!
  choices: [InputChoice]!
  correctAnswers: Int!
  image: String!
  quizCategory: String!
}

type Mutation {
  addProblem(problem: ProblemInput): Problem
  removeProblem(_id: ID): Problem
}

type Query {
  problems: [Problem]
}
